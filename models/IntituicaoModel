<?php
require_once 'DBConexao.php';

class InstituicaoModel
{
    private $conn;

    public function __construct()
    {
        $this->conn = DBConexao::getConexao();
    }

    // Create - Adicionar uma nova instituição
    public function createInstituicao($dados)
    {
        if (empty($dados['nome']) || empty($dados['endereco'])) {
            return ['status' => false, 'error' => 'Os campos nome e endereço são obrigatórios.'];
        }

        try {
            $query = "INSERT INTO instituicoes (nome, endereco) VALUES (:nome, :endereco)";
            $stmt = $this->conn->prepare($query);
            $stmt->bindParam(':nome', $dados['nome']);
            $stmt->bindParam(':endereco', $dados['endereco']);
            $stmt->execute();
            return ['status' => true, 'message' => 'Instituição criada com sucesso.'];
        } catch (PDOException $e) {
            return ['status' => false, 'error' => $e->getMessage()];
        }
    }

    // Read - Obter todas as instituições
    public function getAllInstituicoes()
    {
        try {
            $query = "SELECT id, nome, endereco FROM instituicoes";
            $stmt = $this->conn->prepare($query);
            $stmt->execute();
            return ['status' => true, 'data' => $stmt->fetchAll(PDO::FETCH_ASSOC)];
        } catch (PDOException $e) {
            return ['status' => false, 'error' => $e->getMessage()];
        }
    }

    // Read - Obter uma instituição por ID
    public function getInstituicaoById($id)
    {
        try {
            $query = "SELECT id, nome, endereco FROM instituicoes WHERE id = :id";
            $stmt = $this->conn->prepare($query);
            $stmt->bindParam(':id', $id);
            $stmt->execute();
            $result = $stmt->fetch(PDO::FETCH_ASSOC);
            if ($result) {
                return ['status' => true, 'data' => $result];
            } else {
                return ['status' => false, 'error' => 'Instituição não encontrada.'];
            }
        } catch (PDOException $e) {
            return ['status' => false, 'error' => $e->getMessage()];
        }
    }

    // Update - Atualizar uma instituição
    public function updateInstituicao($id, $dados)
    {
        if (empty($dados['nome']) || empty($dados['endereco'])) {
            return ['status' => false, 'error' => 'Os campos nome e endereço são obrigatórios.'];
        }

        try {
            $query = "UPDATE instituicoes SET nome = :nome, endereco = :endereco WHERE id = :id";
            $stmt = $this->conn->prepare($query);
            $stmt->bindParam(':nome', $dados['nome']);
            $stmt->bindParam(':endereco', $dados['endereco']);
            $stmt->bindParam(':id', $id);
            $stmt->execute();

            if ($stmt->rowCount() > 0) {
                return ['status' => true, 'message' => 'Instituição atualizada com sucesso.'];
            } else {
                return ['status' => false, 'error' => 'Nenhuma alteração realizada ou instituição não encontrada.'];
            }
        } catch (PDOException $e) {
            return ['status' => false, 'error' => $e->getMessage()];
        }
    }

    // Delete - Excluir uma instituição
    public function deleteInstituicao($id)
    {
        try {
            $query = "DELETE FROM instituicoes WHERE id = :id";
            $stmt = $this->conn->prepare($query);
            $stmt->bindParam(':id', $id);
            $stmt->execute();

            if ($stmt->rowCount() > 0) {
                return ['status' => true, 'message' => 'Instituição excluída com sucesso.'];
            } else {
                return ['status' => false, 'error' => 'Instituição não encontrada.'];
            }
        } catch (PDOException $e) {
            return ['status' => false, 'error' => $e->getMessage()];
        }
    }
}

/* 

require_once 'InstituicaoModel.php';

$model = new InstituicaoModel();

// Criar nova instituição
$novaInstituicao = ['nome' => 'Instituição Teste', 'endereco' => 'Rua Exemplo, 123'];
$result = $model->createInstituicao($novaInstituicao);
print_r($result);

// Listar todas as instituições
$result = $model->getAllInstituicoes();
print_r($result);

// Atualizar uma instituição
$dadosAtualizados = ['nome' => 'Novo Nome', 'endereco' => 'Novo Endereço'];
$result = $model->updateInstituicao(1, $dadosAtualizados);
print_r($result);

// Excluir uma instituição
$result = $model->deleteInstituicao(1);
print_r($result);


*/